Step 1 - Save itinerary metadata via a POST call 

1A - Create an Excursion Metadata object

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API postman object name:
 -- Payana  Excursion objects POST
 Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-28cc34d0-9f06-4932-bfbd-c113c467571f 

API call: POST
"""
curl --location 'http://localhost:8888/entity/excursion/' \
--header 'Content-Type: application/json' \
--data '{
    "checkin_id_list": {
    },
    "image_id_list":{ 
    },
    "cities_checkin_id_list":{     
    },
    "participants_list": {"pf_id_1": "1234567"},
    "activities_list": {"hiking": "4", "roadtrip": "6"},
    "excursion_metadata": {
        "excursion_id": "",
        "activity_guide": "False",
        "transport_mode": "drive",
        "place_id": "1234567",
        "excursion_owner_profile_id": "1234567",
        "create_timestamp": "123456789",
        "last_updated_timestamp": "123456789",
        "description": "My excursion",
        "itinerary_id": "1234",
        "place_name": "Land'\''s End",
        "city": "SF##California##USA",
        "state": "California##USA",
        "country": "USA"
    }
}'
"""

Response: 201
-- Returns an excursion ID
"""
{
    "status": "Created",
    "excursion_id": "45c003ff6ee06dfe098a27acdf837f9bf4790541057a693cd2e2e7204e1dac74",
    "message": "Payana excursion checkin object successfully created!",
    "statusCode": 201
}
"""

1B - Create an itinerary album for the above excursion object. Use the excursion ID, description and other details from the previous step

Reference Files:
-- payana_service_itinerary_object_read_write_edit_test.py 
-- payana_itinerary_object_read_write_edit_test.py

API postman object name:
 -- Payana Itinerary objects POST
 Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-5470119e-ca3a-4150-b550-afb61be5c22d 

API call: POST
"""
curl --location 'http://localhost:8888/entity/itinerary/' \
--header 'Content-Type: application/json' \
--data '{
    "excursion_id_list": {
        "1": "12345",
    },
    "activities_list": {
        "hiking": "1.0",
        "roadtrip": "1.0"
    },
    "itinerary_metadata": {
        "description": "Abhinandan's SF excursions",
        "visit_timestamp": "123456789",
        "itinerary_id": "",
        "itinerary_owner_profile_id": "1234567",
        "place_id": "123456",
        "place_name": "Land'\''s End",
        "city": "SF##California##USA",
        "state": "California##USA",
        "country": "USA",
        "last_updated_timestamp": "123456789"
    },
    "cities_list": {
        "cupertino##california##usa": "123456",
        "sunnyvale##california##usa": "1234567"
    }
}'
"""

Reponse: 201
"""
{
    "status": "Created",
    "itinerary_id": "ebf4d62fbcdaa05fcb91d4320c0811546a2305164359e8d5985a039063cecb53",
    "message": "Payana itinerary checkin object successfully created!",
    "statusCode": 201
}
"""

1C - Save the new excursion and itinerary into user's profile itineraries

Reference Files:
 -- payana_service_profile_page_itineraries_read_write_edit_test.py
 -- payana_profile_page_itineraries.py

API postman object name:
 -- Payana Profile Itinerary Object WRITE
 Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-d804f4c3-916f-4ec9-bee4-d52808cd3f87 

API call:
"""
curl --location --request POST 'http://127.0.0.1:8888/profile/itineraries/' \
--header 'profile_id: 123456' \
--header 'Content-Type: application/json' \
--data-raw '{
    "profile_id": "123456",
    "saved_itinerary_id_mapping": {},
    "saved_excursion_id_mapping": {},
    "saved_activity_guide_id_mapping": {},
    "created_itinerary_id_mapping": {"12345": "itinerary_name_one"},
    "created_activity_guide_id_mapping": {},
    "created_excursion_id_mapping": {"12345": "excursion_name_one"},
    "activities": ["generic", "hiking", "romantic"]
}'
"""

Note:
 -- created_itinerary_id_mapping => itinerary_id and name from 1B
 -- created_excursion_id_mapping => excursion_id and name from 1A
 -- activities => selected in 1A 

Response: 200/201

Step 2 - Google places auto-complete 
  -- Step 7A in payana_homepage_flow.txt

Step 3 - Create an excursion and publish

3A - Save Images into Google Cloud
  -- Steps 3A and 3B in payana_signup_flow.txt
  -- Change the headers:
        --header 'payana_storage_bucket: payana_itinerary_pictures' \
        --header 'payana_storage_object: 1A##1##123456789' \

        -- How to decipher 1A##1##123456789:
            -- 1A => 1 is the check in post position, A is the image position
            -- 1 => 1 is the check in post position
            -- 123456789 => excursion ID


3B - Create Check In object Metadata
Reference Files:
-- payana_service_checkin_objects_read_write_edit_test.py
-- payana_checkin_object_read_write_edit_test.py

API Postman Files:
  -- Payana Check in POST
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-70f0bc21-4fb2-46d5-a9a0-4bd7a79ca933 

API call: POST
"""
curl --location --request POST 'http://127.0.0.1:8888/entity/checkin/' \
--header 'Content-Type: application/json' \
--data-raw '{
    "image_id_list": {
        "A": "1A##1##<excursion_id>",
        "B": "1B##1##<excursion_id>",
        "C": "1C##1##<excursion_id>"
    },
    "participants_list": {},
    "activities_list": {"hiking": "8", "roadtrip": "9"},
    "instagram_metadata": {
    },
    "airbnb_metadata": {
    },
    "checkin_metadata": {
        "transport_mode": "drive",
        "description": "Enjoying the beach!",
        "checkin_owner_profile_id": "1234567",
        "create_timestamp": "123456789",
        "last_updated_timestamp": "123456789",
        "checkin_id": "1##<excursion_id>",
        "place_id": "1234567",
        "excursion_id": "12345",
        "itinerary_id": "12345",
        "place_name": "Land'\''s End",
        "city": "SF##California##USA",
        "state": "California##USA",
        "country": "USA"
    }
}
'
"""

Response: 201


3C - Add CheckIn Metadata into the parent Excursion Object

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API Postman file:
  -- Payana  Excursion objects PUT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-7d9e3878-80ba-4f89-b624-a4ddeeb6c314

API call: Same as 1A but a PUT call
"""
curl --location 'http://localhost:8888/entity/excursion/' \
--header 'Content-Type: application/json' \
--data '{
    "checkin_id_list": {
        "1": "1##<excursion_id>",
        "2": "2##<excursion_id>",
        "3": "3##<excursion_id>"
    },
    "image_id_list":{
        "1A": "1A##1##<excursion_id>",
        "1B": "1B##1##<excursion_id>",
        "2A": "2A##2##<excursion_id>",
        "2B": "2B##2##<excursion_id>",
        "3A": "3A##3##<excursion_id>",
        "3B": "3B##3##<excursion_id>" 
    },
    "cities_checkin_id_list":{
        "1": "cupertino##california##usa",
        "2": "sunnyvale##california##usa",
        "3": "santaclara##california##usa"       
    },
    "participants_list": {"pf_id_1": "1234567"},
    "activities_list": {"hiking": "4", "roadtrip": "6"},
    "excursion_metadata": {
        "excursion_id": "123456789",
        "activity_guide": "False",
        "transport_mode": "drive",
        "place_id": "1234567",
        "excursion_owner_profile_id": "1234567",
        "create_timestamp": "123456789",
        "last_updated_timestamp": "123456789",
        "description": "My excursion",
        "itinerary_id": "1234",
        "place_name": "Land'\''s End",
        "city": "SF##California##USA",
        "state": "California##USA",
        "country": "USA"
    }
}'
"""

Response: 200


Step 4 - Share Itinerary with existing friends

4A - Fetch existing friends auto-complete for sharing/tagging in itineraries

Reference files:
-- payana_service_travel_buddy_read_write_edit_test.py
-- payana_travel_buddy_read_write_edit_test.py

API Postman file:
  -- Payana  travel buddy object GET regex friend tag
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-4e8145ab-617b-40f9-bd19-4db1ece0781a 

API:
"""
curl --location 'http://127.0.0.1:8888/profile/travelbuddy/tag/' \
--header 'Content-Type: application/json' \
--header 'profile_id: 1234567' \
--header 'friend_id: abh.*'
"""

Response:
{
    "abhinandankr": "456789"
}

4B - Share the itinerary with friends via Notifications (To be done - UI, service, backend)

Reference Files:

API call:

Reponse:


Step 5 - Share Itinerary with new users via a mail invite

Reference Files:
-- payana_service_mail_id_sign_up_notification_controller.py 

API Postman file:
  -- Payana  sign up mail notification object POST
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-8d9c983d-2b17-4385-8553-b0f2d60fd951

API call:
"""
curl --location 'http://127.0.0.1:8888/entity/signup/' \
--header 'Content-Type: application/json' \
--header 'profile_id: 123456789' \
--data-raw '{
    "profile_name": "abkr",
    "sign_up_mail_id_list": [
        "payanaapp@gmail.com"
    ],
    "itinerary_id": "12345",
    "itinerary_name": "Seattle itinerary!"
}'
"""

Reponse: 200


Step 6 - Edit Itinerary Album Metadata 

Step 6A - Update the name in the Itinerary Metadata table

Reference Files:
-- payana_service_itinerary_object_read_write_edit_test.py 
-- payana_itinerary_object_read_write_edit_test.py

API Postman file:
  -- Payana Itinerary objects PUT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-5691cdff-4b71-4c1f-bbd4-f4dd087c8e06

API call: PUT
# Edit
"""
curl --location --request PUT 'http://localhost:8888/entity/itinerary/' \
--header 'Content-Type: application/json' \
--header 'itinerary_id: a57ea7b44912faf705d33b929d6134fe65ca84cafd1a4bbd7a631dfe077b9e15' \
--data '{
    "excursion_id_list": {
        "1": "12345",
        "4": "23456",
        "3": "34567"
    },
    "activities_list": {
        "hiking": "1.0",
        "roadtrip": "2.0",
        "aerial_activities": "1.0"
    },
    "itinerary_metadata": {
        "description": "Abhinandan'\''s SF excursions",
        "visit_timestamp": "123456789",
        "itinerary_id": "a57ea7b44912faf705d33b929d6134fe65ca84cafd1a4bbd7a631dfe077b9e15",
        "itinerary_owner_profile_id": "1234567",
        "place_id": "123456",
        "place_name": "Land'\''s End",
        "city": "SF##California##USA1",
        "state": "California##USA",
        "country": "USA",
        "last_updated_timestamp": "123456789"
    },
    "cities_list": {
        "cupertino##california##usa": "123456",
        "sunnyvale##california##usa": "1234567"
    }
}'
"""

Note:
-- To add/remove cities, update the "cities_list"
-- To change name, update the "description"
-- To add/remove activities list, update the "activities_list"

Reponse: 200

Step 6B - If itinerary name is changed, update the created_itinerary_id_mapping/saved_itinerary_id_mapping in the profile itinerary table of the user
-- Same as 1C but do a PUT call instead of POST

API Postman files:
  -- Payana Profile Itinerary Object EDIT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-34eed306-9b09-443a-872c-00cf05a5757c

Step 6C - Update the itinerary name in the excursion object table

Step 7 - Edit Excursion 

7A - Edit Excursion Metadata

7A1 - Update the Excursion Metadata table (Only activities_list, participants_list, description, activities_list)

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API Postman File:
  -- Payana  Excursion objects PUT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-7d9e3878-80ba-4f89-b624-a4ddeeb6c314 

API call: PUT
curl --location --request PUT 'http://localhost:8888/entity/excursion/' \
--header 'Content-Type: application/json' \
--header 'excursion_id: 123456789' \
--data '{
    "checkin_id_list": {
        "1": "1##<excursion_id>",
        "2": "2##<excursion_id>",
        "3": "3##<excursion_id>"
    },
    "image_id_list":{
        "1A": "1A##1##<excursion_id>",
        "1B": "1B##1##<excursion_id>",
        "2A": "2A##2##<excursion_id>",
        "2B": "2B##2##<excursion_id>",
        "3A": "3A##3##<excursion_id>",
        "3B": "3B##3##<excursion_id>" 
    },
    "cities_checkin_id_list":{
        "1": "cupertino##california##usa",
        "2": "sunnyvale##california##usa",
        "3": "santaclara##california##usa"       
    },
    "participants_list": {"pf_id_4": "1234567", "pf_id_2": "12345678"},
    "activities_list": {"romantic": "4", "roadtrip": "7"},
    "excursion_metadata": {
        "place_name": "Land's End 1",
        "city": "SF##California##USA",
        "state": "California##USA",
        "country": "USA"
    }
}'
"""

Note:
 -- Edit the "participants_list", if you are tagging more people into the excusrion
 -- Edit the "activities_list", if adding/removing activities
 -- Edit the "cities_checkin_id_list" if updating the city for a given checkin object

Reponse: 200

7A2 - If excursion name is changed, update the created_excursion_id_mapping/saved_excursion_id_mapping in the profile itinerary table of the user 
 -- Same as 1C
 API Postman files:
  -- Payana Profile Itinerary Object EDIT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-34eed306-9b09-443a-872c-00cf05a5757c


7B - Add new Images to an existing check in object

7B1 -- Upload the images into Google Cloud storage
  -- Same as Step 3A above

7B2 - Update the CheckIn object metadata i.e. add the new image ID

Reference Files:
-- payana_service_checkin_objects_read_write_edit_test.py
-- payana_checkin_object_read_write_edit_test.py

API Postman files:
  -- Payana Check in PUT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-09a45bfb-91be-410e-a88b-50cb0f008a98

API call: PUT
"""
curl --location --request PUT 'http://127.0.0.1:8888/entity/checkin/' \
--header 'Content-Type: application/json' \
--header 'checkin_id: d5abe50bba3a82383300e46ee14ce283d30d70bc9a4dc855a853011f124b3ba8' \
--data-raw '{
    "image_id_list": {
        "D": "1D##1##<excursion_id>"
    }
}
'
"""

Reponse: 200


7B3 - Update the Excursion Object Metadata

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API Postman File:
  -- Payana  Excursion objects PUT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-7d9e3878-80ba-4f89-b624-a4ddeeb6c314

API call:
"""
curl --location --request PUT 'http://localhost:8888/entity/excursion/' \
--header 'Content-Type: application/json' \
--header 'excursion_id: 123456789' \
--data '{
    "image_id_list":{
        "1D": "1D##1##<excursion_id>" 
    }
}'
"""

Reponse: 200


7C - Add new CheckIn object

7C1 -- Upload the images into Google Cloud storage
  -- Same as Step 3A above

7C2 - Create the CheckIn object metadata 
  -- Same as Step 3C above

7C3 - Update the Excursion Object Metadata (same as 7B3, but different data)

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API Postman File:
  -- Payana  Excursion objects PUT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-7d9e3878-80ba-4f89-b624-a4ddeeb6c314

API call:
"""
curl --location --request PUT 'http://localhost:8888/entity/excursion/' \
--header 'Content-Type: application/json' \
--header 'excursion_id: 123456789' \
--data '{
    "checkin_id_list": {
        "4": "4##<excursion_id>"
    },
    "image_id_list":{
        "4A": "4A##4##<excursion_id>",
        "4B": "4B##4##<excursion_id>"
    },
    "cities_checkin_id_list":{
        "4": "cupertino##california##usa"       
    },
    "participants_list": {"pf_id_1": "1234567"},
    "activities_list": {"hiking": "4", "roadtrip": "6"}
}'
"""

Reponse: 200/201


7D - Remove Images from CheckIn object

7D1 -- Remove the images from Google Cloud storage

Reference files:
--  payana_service_gcs_image_read_write_edit_test.py

API Postman file:
  -- Payana  GCS object delete
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-11f44a15-91d8-4eb2-8c7b-843ca9ae8057

API call: DELETE
"""
curl --location --request DELETE 'http://127.0.0.1:8888/entity/gcs/object/' \
--header 'Content-Type: application/json' \
--header 'payana_storage_bucket: payana_profile_pictures' \
--header 'payana_storage_object: profile_picture_one'
"""

Response: 200

7D2 - Remove the image metadata from the CheckIn object metadata 

Reference Files:
-- payana_service_checkin_objects_read_write_edit_test.py
-- payana_checkin_object_read_write_edit_test.py

API Postman file:
  -- Payana Check in Delete Values
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-41f53bfa-28d9-493b-8f96-c85e9e2f720f

API call: POST
"""
curl --location --request POST 'http://127.0.0.1:8888/entity/checkin/delete/values/' \
--header 'Content-Type: application/json' \
--header 'checkin_id: d5abe50bba3a82383300e46ee14ce283d30d70bc9a4dc855a853011f124b3ba8' \
--data-raw '{
    "image_id_list": [
        "A"
    ]
}'
"""

Response: 200

7D3 - Update the Excursion Object Metadata by removing the image ID metadata

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API Postman file:
  -- Payana  Excursion objects DELETE values
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-da8ce965-0a6a-44ed-af38-ca44c4428bb8

API call: POST
"""
curl --location 'http://127.0.0.1:8888/entity/excursion/delete/values/' \
--header 'Content-Type: application/json' \
--header 'excursion_id: 123456789' \
--data '{
    "image_id_list": {
        "4A": ""
    }
}'
"""

Meaning: 
 -- To remove the deleted image ID from "image_id_list"

Reponse: 200/201


7E - Remove CheckIn Object

7E1 -- Remove the images from Google Cloud storage
  -- Same as 7D1

7E2 - Remove the the CheckIn object metadata 

Reference Files:
-- payana_service_checkin_objects_read_write_edit_test.py
-- payana_checkin_object_read_write_edit_test.py

API Postman file:
  -- Payana Check in Delete Row
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-11c12372-ac2e-4b9b-a543-0d0b631ebace

API call: DELETE
""" 
curl --location --request DELETE 'http://127.0.0.1:8888/entity/checkin/delete/' \
--header 'Content-Type: application/json' \
--header 'checkin_id: 4##<excursion_id>'
"""

Response: 200

7E3 - Update the Excursion Object Metadata by removing the CheckIn ID and the Image IDs (same as 7D3 but different data)

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API Postman file:
  -- Payana  Excursion objects DELETE values
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-da8ce965-0a6a-44ed-af38-ca44c4428bb8 

API call: POST
"""
curl --location 'http://127.0.0.1:8888/entity/excursion/delete/values/' \
--header 'Content-Type: application/json' \
--header 'excursion_id: 123456789' \
--data '{
    "checkin_id_list": {
        "1": "1##<excursion_id>"
    },
    "image_id_list":{
        "1A": "1A##1##<excursion_id>",
        "1B": "1B##1##<excursion_id>" 
    },
    "cities_checkin_id_list":{
        "1": "cupertino##california##usa"     
    }
}'
"""

Meaning: 
 -- To remove the deleted image ID or Ids from "image_id_list"
 -- To remove the deleted checkin ID or Ids from "checkin_id_list"
 -- To remove the checkin ID to city mapping from "cities_checkin_id_list

Reponse: 200/201


7F - Edit CheckIn Metadata

Reference Files:
-- payana_service_checkin_objects_read_write_edit_test.py
-- payana_checkin_object_read_write_edit_test.py

API Postman files:
  -- Payana Check in PUT
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-09a45bfb-91be-410e-a88b-50cb0f008a98

API call:
"""
curl --location --request PUT 'http://127.0.0.1:8888/entity/checkin/' \
--header 'Content-Type: application/json' \
--header 'checkin_id: d5abe50bba3a82383300e46ee14ce283d30d70bc9a4dc855a853011f124b3ba8' \
--data-raw '{
    "activities_list": {"hiking": "8", "roadtrip": "9"},
    "checkin_metadata": {
        "transport_mode": "drive",
        "description": "Enjoying the beach!",
        "checkin_owner_profile_id": "1234567",
        "create_timestamp": "123456789",
        "last_updated_timestamp": "123456789",
        "checkin_id": "d5abe50bba3a82383300e46ee14ce283d30d70bc9a4dc855a853011f124b3ba8",
        "place_id": "1234567",
        "excursion_id": "12345",
        "itinerary_id": "12345",
        "place_name": "Land'\''s End",
        "city": "SF##California##USA",
        "state": "California##USA",
        "country": "USA"
    }
}
'
"""
Meaning:
-- Update activity list 
-- Update checkin metadata
  -- if city name is updated, then city name has to be updated in excursion metadata too 
    -- Edit the "cities_checkin_id_list" if updating the city for a given checkin object in 7A 

Reponse: 200/201


Step 9 - Remove an excursion

9A - Remove all the CheckIn Objects Metadata in the Excursion
 -- Same as 7E2 above (repeat for all the check in object IDs in the Excursion)

9B - Remove the images from GCS 
 -- Same as 7E1 (repeat for all the image IDs)

9C -- Remove the excursion object

Reference Files:
-- payana_service_excursion_objects_read_write_edit_test.py
-- payana_excursion_object_read_write_edit_test.py

API Postman files:
  -- Payana  Excursion objects DELETE ROW
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-2911225a-e3b5-41f1-9b1a-dcb3abb3673a

API call: DELETE
"""
curl --location --request DELETE 'http://127.0.0.1:8888/entity/excursion/delete/' \
--header 'Content-Type: application/json' \
--header 'excursion_id: 123456789' \
--data ''
"""

Response: 200

9D - Update the Itinerary Album i.e. remove the excursion ID from the Itinerary album

Reference Files:
-- payana_service_itinerary_object_read_write_edit_test.py 
-- payana_itinerary_object_read_write_edit_test.py

API Postman file:
  -- Payana Itinerary objects DELETE values
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-2cc42d17-c75a-4526-a88f-54144fb0bd83

API call: POST
"""
curl --location 'http://localhost:8888/entity/itinerary/delete/values/' \
--header 'Content-Type: application/json' \
--header 'itinerary_id: 12345678' \
--data '{
    "excursion_id_list": {
        "1": "12345",
        "4": "23456"
    }
}'
"""

Response: 200

9E - Update the profile itinerary/excursion object i.e. remove the excursion ID from the profile saved/created itineraries

Reference Files:
 -- payana_service_profile_page_itineraries_read_write_edit_test.py
 -- payana_profile_page_itineraries.py

API Postman file:
  -- Payana profile page itinerary delete value activities
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-640ffa3c-2d29-4f3e-bb7a-72a183375b40

API call:
"""
curl --location --request POST 'http://127.0.0.1:8888/profile/itineraries/delete/values/activities/' \
--header 'profile_id: 123456' \
--header 'Content-Type: application/json' \
--data-raw '{
    "created_excursion_id_mapping": {
            "12345": "itinerary_name_one"
        }
}'
"""

Reponse: 200

Step 10 - Remove an itinerary album

10A -- Remove all the excursion objects in the itinerary 
 -- Same as 9C (repeat for all the excursions)

10B - Remove all the CheckIn Object Metadata objects
 -- Same as 7E2 above (repeat for all the check in object IDs in the Excursion)

10C - Remove the images from GCS 
 -- Same as 7E1 (repeat for all the image IDs)

10D - Remove the Itinerary 
Reference Files:
-- payana_service_itinerary_object_read_write_edit_test.py 
-- payana_itinerary_object_read_write_edit_test.py

API Postman file:
  -- Payana Itinerary objects DELETE ROW
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-c251c5f8-3276-4fbb-b30f-78bb7a71e6e4

API call: DELETE
"""
curl --location --request DELETE 'http://localhost:8888/entity/itinerary/delete/' \
--header 'Content-Type: application/json' \
--header 'itinerary_id: 12345678' \
--data ''
"""

Response: 200


10E - Update the profile itinerary/excursion object
  -- Same as 1C


Step 11 - Grant edit access to itineraries

Reference Files:
 -- payana_service_excursion_checkin_objects_permission_read_write_edit_test.py
 -- payana_excursion_checkin_objects_permissions.py

API Postman file:
  -- Payana  Excursion checkin objects permission POST
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-3af3488f-ccd2-4b6b-af28-4a85ebe7085c

API call:
"""
curl --location 'http://127.0.0.1:8888/entity/edit/permission/' \
--header 'Content-Type: application/json' \
--header 'entity_id: 123456789' \
--data '{
    "entity_id": "123456789",
    "participants_list": {"pf_id_1": "1234567", "pf_id_2": "1234567", "pf_id_3": "1234567"},
    "edit_participants_list": {"pf_id_2": "1234567", "pf_id_3": "1234567"},
    "admin": {"pf_id_1": "1234567"}
}'
"""

Reponse: 200

Step 12 - Remove edit access to itineraries

Reference Files:
 -- payana_service_excursion_checkin_objects_permission_read_write_edit_test.py
 -- payana_excursion_checkin_objects_permissions.py

API Postman file:
  -- Payana  Excursion checkin objects permission DELETE values
  Link: https://red-robot-449517.postman.co/workspace/28d8f057-fa71-4844-966d-2bac94136c58/request/921141-4a0532d8-3235-49d3-8541-ccb6a82cb097

API call:
"""
curl --location 'http://127.0.0.1:8888/entity/edit/permission/delete/values/' \
--header 'Content-Type: application/json' \
--header 'entity_id: 123456789' \
--data '{
    "participants_list": {"pf_id_1": ""},
    "edit_participants_list": {"pf_id_2": ""}
}'
"""

Reponse: 200


Step 13 - How to read/download an uploaded image

-- Step 3C in payana_signup_flow.txt (copying from payana_signup_flow.txt for reference)

How to verify if the image got uploaded successfully?

   -- 3C1 - Get the Signed URL token to download the image

   API:
   """
   curl --location 'http://localhost:8888/entity/signed_url/download' \
    --header 'Content-Type: application/json' \
    --header 'profile_id: 123456789' \
    --header 'payana_storage_bucket: payana_profile_pictures' \
    --header 'payana_storage_object: profile_picture_one'
   """
   Note: payana_storage_object should match the object you want to download, in this case, the email ID of the user

   Response: Returns a signed URL token
   """
   https://storage.googleapis.com/payana_profile_pictures/profile_picture_one?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=payana-two-bigtable%40payana-two.iam.gserviceaccount.com%2F20240324%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20240324T021259Z&X-Goog-Expires=900&X-Goog-SignedHeaders=host&X-Goog-Signature=1f3b483c087a32e603c4241002eff151fbf0194892cd25707087c445a1abf2b443f2b579a17edcb0e67db4f19f874c431609c625f30055d3918eff63438da4ede94bad4f88f9a0786e13169fa21b72d38690a68251436c59ca925119af7288f4adf6631b89d56a7a52c92045effe0f8bdf05e5a47b808e1f2b7a7dcef157f5048a620d9b9c1f53badf5158f122d4cbaf451983218d2840ef6b2a26ad9d977f9ce4a692b7df15c9cdc0318805fe017d5bece363309fd429b266180ce82e3825e5b05c17ec2622700c68ece2893ff49ac15747190ef0d656cc52c598a0106c1e0adf02e6e8f32f957c814cf554ea525084681d14d7d03fa45f1e69782d9aef216b
   """


   -- 3C2 - Download the image 
   API:
   """
   curl --location 'https://storage.googleapis.com/payana_profile_pictures/profile_picture_one?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=payana-two-bigtable%40payana-two.iam.gserviceaccount.com%2F20240324%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20240324T021259Z&X-Goog-Expires=900&X-Goog-SignedHeaders=host&X-Goog-Signature=1f3b483c087a32e603c4241002eff151fbf0194892cd25707087c445a1abf2b443f2b579a17edcb0e67db4f19f874c431609c625f30055d3918eff63438da4ede94bad4f88f9a0786e13169fa21b72d38690a68251436c59ca925119af7288f4adf6631b89d56a7a52c92045effe0f8bdf05e5a47b808e1f2b7a7dcef157f5048a620d9b9c1f53badf5158f122d4cbaf451983218d2840ef6b2a26ad9d977f9ce4a692b7df15c9cdc0318805fe017d5bece363309fd429b266180ce82e3825e5b05c17ec2622700c68ece2893ff49ac15747190ef0d656cc52c598a0106c1e0adf02e6e8f32f957c814cf554ea525084681d14d7d03fa45f1e69782d9aef216b'
   """

   Response:
   """
   200 SUCCESS 
   """

Step 14 - No duplicate excursion names for one profile/user. 
          When the user enters an excursion after clicking '+' button or edits an excursion name. 
          Make a GET call below to fetch the existing excursions on the user's profile page.
          Check inside "generic_created_activity_guide_id_mapping", "generic_created_excursion_id_mapping", "generic_saved_activity_guide_id_mapping", "generic_saved_excursion_id_mapping" to make sure the excursion names are not repeated.

Reference Files:
 -- payana_service_profile_page_itineraries_read_write_edit_test.py
 -- payana_profile_page_itineraries.py

API Postman file:
  -- Payana Profile Itinerary Object READ

API call:
"""
curl --location 'http://localhost:8888/profile/itineraries/' \
--header 'profile_id: 123456789'
"""

Response:
"""
{
    "123456789": {
        "generic_created_activity_guide_id_mapping": {
            "Abhi's itinerary 7": "fc032ff9ea7a92fdd69a049009a72f6c6267e36bb43461fbc44d93f80877ae0f"
        },
        "generic_created_itinerary_id_mapping": {
            "Cupertino, Sunnyvale": "82b6ce1ffd10f6dbba2decf127f6cb44d9d01028c8afb5a4c0670bd7ec53f554"
        },
        "hiking_created_activity_guide_id_mapping": {
            "Abhi's itinerary 7": "fc032ff9ea7a92fdd69a049009a72f6c6267e36bb43461fbc44d93f80877ae0f"
        },
        "hiking_created_itinerary_id_mapping": {
            "Cupertino, Sunnyvale": "82b6ce1ffd10f6dbba2decf127f6cb44d9d01028c8afb5a4c0670bd7ec53f554"
        },
        "road_trips_created_activity_guide_id_mapping": {
            "Abhi's itinerary 7": "fc032ff9ea7a92fdd69a049009a72f6c6267e36bb43461fbc44d93f80877ae0f"
        },
        "romantic_created_activity_guide_id_mapping": {
            "Abhi's itinerary 7": "fc032ff9ea7a92fdd69a049009a72f6c6267e36bb43461fbc44d93f80877ae0f"
        },
        "spring_break_created_itinerary_id_mapping": {
            "Cupertino, Sunnyvale": "82b6ce1ffd10f6dbba2decf127f6cb44d9d01028c8afb5a4c0670bd7ec53f554"
        }
    }
}
"""